<UserControl x:Class="CardDesigner.UI.Controls.MinionCardControl" x:Name="minionCard"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:CardDesigner.UI.Controls"
    xmlns:converters="clr-namespace:CardDesigner.UI.Converters"
    xmlns:enums="clr-namespace:CardDesigner.Domain.Enums;assembly=CardDesigner.Domain"
    xmlns:local="clr-namespace:CardDesigner.UI.Controls">
    <UserControl.Resources>
        <Style x:Key="listLabelStyle" BasedOn="{StaticResource {x:Type Label}}" TargetType="{x:Type Label}">
            <Setter Property="Margin" Value="0" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="ContentStringFormat" Value="{} -{0}" />
        </Style>

        <!--  Minion header  -->
        <ControlTemplate x:Key="MinionHeaderTemplate">
            <Canvas Width="246">
                <controls:TextBoxWithPlaceholderControl
                    Width="246"
                    Background="Transparent"
                    FontSize="{Binding MinionCard.TitleFontSize, ElementName=minionCard, Mode=TwoWay}"
                    Foreground="{Binding CardDesign.HeaderTextColor, ElementName=minionCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    InputText="{Binding Minion.Title, ElementName=minionCard, Mode=TwoWay}"
                    IsEnabled="{Binding IsEditable, ElementName=minionCard}" />
            </Canvas>
        </ControlTemplate>

        <!--  Avatar content  -->
        <ControlTemplate x:Key="AvatarContentTemplate">
            <!--  Avatar icon  -->
            <StackPanel>
                <controls:ImageControl
                    Height="175"
                    ImageSource="{Binding Minion.AvatarImagePath, ElementName=minionCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    ImageStretch="{Binding Minion.AvatarImageStretch, ElementName=minionCard, Mode=TwoWay, Converter={converters:StringToStretchConverter}, UpdateSourceTrigger=PropertyChanged}" />
                <Border
                    Width="246"
                    Padding="0,10,0,0"
                    BorderBrush="{StaticResource CardLineColor}"
                    BorderThickness="0,2,0,0">
                    <StackPanel
                        Grid.Row="1"
                        Orientation="Horizontal">
                        <local:AbilityBaseControl
                            Margin="3,0"
                            AbilityLevel="{Binding Minion.Strength, ElementName=minionCard}"
                            AbilityLevelBonus="{Binding Minion.StrengthBonus, ElementName=minionCard}"
                            AbilityName="STR"
                            SwitchAbilityValueBonus="True" />
                        <local:AbilityBaseControl
                            Margin="4,0"
                            AbilityLevel="{Binding Minion.Dexterity, ElementName=minionCard}"
                            AbilityLevelBonus="{Binding Minion.DexterityBonus, ElementName=minionCard}"
                            AbilityName="DEX"
                            SwitchAbilityValueBonus="True" />
                        <local:AbilityBaseControl
                            Margin="4,0"
                            AbilityLevel="{Binding Minion.Constitution, ElementName=minionCard}"
                            AbilityLevelBonus="{Binding Minion.ConstitutionBonus, ElementName=minionCard}"
                            AbilityName="CON"
                            SwitchAbilityValueBonus="True" />
                        <local:AbilityBaseControl
                            Margin="4,0"
                            AbilityLevel="{Binding Minion.Wisdom, ElementName=minionCard}"
                            AbilityLevelBonus="{Binding Minion.WisdomBonus, ElementName=minionCard}"
                            AbilityName="INT"
                            SwitchAbilityValueBonus="True" />
                        <local:AbilityBaseControl
                            Margin="4,0"
                            AbilityLevel="{Binding Minion.Inteligence, ElementName=minionCard}"
                            AbilityLevelBonus="{Binding Minion.InteligenceBonus, ElementName=minionCard}"
                            AbilityName="WIS"
                            SwitchAbilityValueBonus="True" />
                        <local:AbilityBaseControl
                            Margin="4,0"
                            AbilityLevel="{Binding Minion.Charisma, ElementName=minionCard}"
                            AbilityLevelBonus="{Binding Minion.CharismaBonus, ElementName=minionCard}"
                            AbilityName="CHA"
                            SwitchAbilityValueBonus="True" />
                    </StackPanel>
                </Border>
            </StackPanel>
        </ControlTemplate>

        <!--  Stats content  -->
        <ControlTemplate x:Key="StatsContentTemplate">
            <StackPanel Margin="10,0">
                <controls:DataLabel
                    Value1="{Binding Minion.PassivePerception, ElementName=minionCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    ValueName="Passive Perception" />
                <controls:DataLabel
                    Value1="{Binding Minion.SavingThrows, ElementName=minionCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    ValueName="Saving Throws" />
                <controls:DataLabel
                    Margin="0"
                    Value1="{Binding Minion.SkillBonuses, ElementName=minionCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    ValueName="Skill Bonuses" />
                <controls:DataLabel
                    Value1="{Binding Minion.DamageImmunities, ElementName=minionCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    ValueName="Damage Immunities" />
                <controls:DataLabel
                    Value1="{Binding Minion.DamageResistances, ElementName=minionCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    ValueName="Damage Resistances" />
                <controls:DataLabel
                    Value1="{Binding Minion.ConditionImmunities, ElementName=minionCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    ValueName="Condition Immunities" />
                <controls:DataLabel
                    Value1="{Binding Minion.Senses, ElementName=minionCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    ValueName="Senses" />
                <controls:DataLabel
                    Value1="{Binding Minion.Languages, ElementName=minionCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    ValueName="Languages" />
            </StackPanel>
        </ControlTemplate>

        <!--  Actions content  -->
        <ControlTemplate x:Key="AttributesContentTemplate">
            <StackPanel Margin="10,0">
                <controls:DataLabel
                    Orientation="Vertical"
                    Value1="{Binding Minion.Attributes, ElementName=minionCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    ValueName="Attributes" />
            </StackPanel>
        </ControlTemplate>

        <!--  Actions content  -->
        <ControlTemplate x:Key="ActionsContentTemplate">
            <StackPanel Margin="10,0">
                <controls:DataLabel
                    Orientation="Vertical"
                    Value1="{Binding Minion.Actions, ElementName=minionCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    ValueName="Actions" />
            </StackPanel>
        </ControlTemplate>

        <!--  Legendary Actions content  -->
        <ControlTemplate x:Key="LegendaryActionsContentTemplate">
            <StackPanel Margin="10,0">
                <controls:DataLabel
                    Value1="{Binding Minion.LegendaryActions, ElementName=minionCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    ValueName="Legendary Actions" />
            </StackPanel>
        </ControlTemplate>

        <!--  Avatar footer  -->
        <ControlTemplate x:Key="AvatarFooterTemplate">
            <StackPanel Orientation="Horizontal">
                <controls:IconWithPropertyControl
                    Height="30"
                    Icon="{StaticResource HealthPoints}"
                    IconColorFooter="{Binding CardDesign.FooterIconColor, ElementName=minionCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    TextColor="{Binding CardDesign.FooterTextColor, ElementName=minionCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Value="{Binding Minion.Hitpoints, ElementName=minionCard}" />
                <controls:IconWithPropertyControl
                    Height="30"
                    Icon="{StaticResource ArmourClass}"
                    IconColorFooter="{Binding CardDesign.FooterIconColor, ElementName=minionCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    TextColor="{Binding CardDesign.FooterTextColor, ElementName=minionCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Value="{Binding Minion.ArmourClass, ElementName=minionCard}" />
            </StackPanel>
        </ControlTemplate>

        <!--  Stats footer  -->
        <ControlTemplate x:Key="StatsFooterTemplate">
            <StackPanel Orientation="Horizontal">
                <controls:IconWithPropertyControl
                    Height="30"
                    Icon="{StaticResource Speed}"
                    IconColorFooter="{Binding CardDesign.FooterIconColor, ElementName=minionCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    TextColor="{Binding CardDesign.FooterTextColor, ElementName=minionCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Value="{Binding Minion.Speed, ElementName=minionCard}" />
                <controls:IconWithPropertyControl
                    Height="30"
                    Icon="{StaticResource ClimbingSpeed}"
                    IconColorFooter="{Binding CardDesign.FooterIconColor, ElementName=minionCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    TextColor="{Binding CardDesign.FooterTextColor, ElementName=minionCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Value="{Binding Minion.ClimbingSpeed, ElementName=minionCard}" />
                <controls:IconWithPropertyControl
                    Height="30"
                    Icon="{StaticResource FlyingSpeed}"
                    IconColorFooter="{Binding CardDesign.FooterIconColor, ElementName=minionCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    TextColor="{Binding CardDesign.FooterTextColor, ElementName=minionCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Value="{Binding Minion.FlyingSpeed, ElementName=minionCard}" />
                <controls:IconWithPropertyControl
                    Height="30"
                    Icon="{StaticResource SwimingSpeed}"
                    IconColorFooter="{Binding CardDesign.FooterIconColor, ElementName=minionCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    TextColor="{Binding CardDesign.FooterTextColor, ElementName=minionCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Value="{Binding Minion.SwimingSpeed, ElementName=minionCard}" />
            </StackPanel>
        </ControlTemplate>

    </UserControl.Resources>
    <Viewbox>
        <Grid>
            <!--  Card Header  -->
            <Border
                Width="250"
                Height="80"
                Margin="0"
                Padding="0"
                VerticalAlignment="Top"
                Background="{Binding CardDesign.HeaderColor, ElementName=minionCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                BorderBrush="{StaticResource CardLineColor}"
                BorderThickness="2"
                CornerRadius="4" />

            <!--  Card Footer  -->
            <Border
                Width="250"
                Height="80"
                Margin="0"
                Padding="0"
                VerticalAlignment="Bottom"
                Background="{Binding CardDesign.FooterColor, ElementName=minionCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                BorderBrush="{StaticResource CardLineColor}"
                BorderThickness="2"
                CornerRadius="4" />

            <!--  Card contents  -->
            <Canvas>

                <!--  Body lines  -->
                <Border
                    Canvas.Top="35"
                    Width="250"
                    Height="280"
                    Margin="0"
                    Padding="0"
                    Background="{Binding CardDesign.BackgroundColor, ElementName=minionCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    BorderBrush="{Binding CardDesign.LineColor, ElementName=minionCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    BorderThickness="0,2,0,2" />

                <Grid
                    Canvas.Left="2"
                    Canvas.Top="37"
                    Width="250"
                    Height="276"
                    Background="Transparent" />

                <!--  Header  -->
                <ContentControl
                    Canvas.Left="2"
                    Width="248"
                    Margin="0,0,5,0">
                    <ContentControl.Style>
                        <Style TargetType="{x:Type ContentControl}">
                            <Setter Property="Template" Value="{StaticResource MinionHeaderTemplate}" />
                        </Style>
                    </ContentControl.Style>
                </ContentControl>

                <!--  Content  -->
                <ContentControl
                    Canvas.Left="2"
                    Canvas.Top="37"
                    Width="246">
                    <ContentControl.Style>
                        <Style TargetType="{x:Type ContentControl}">
                            <Style.Triggers>
                                <DataTrigger
                                    Binding="{Binding MinionCard.Type, ElementName=minionCard}"
                                    Value="{x:Static enums:MinionCardType.Avatar}">
                                    <Setter Property="Template" Value="{StaticResource AvatarContentTemplate}" />
                                </DataTrigger>
                                <DataTrigger
                                    Binding="{Binding MinionCard.Type, ElementName=minionCard}"
                                    Value="{x:Static enums:MinionCardType.Stats}">
                                    <Setter Property="Template" Value="{StaticResource StatsContentTemplate}" />
                                </DataTrigger>
                                <DataTrigger
                                    Binding="{Binding MinionCard.Type, ElementName=minionCard}"
                                    Value="{x:Static enums:MinionCardType.Attributes}">
                                    <Setter Property="Template" Value="{StaticResource AttributesContentTemplate}" />
                                </DataTrigger>
                                <DataTrigger
                                    Binding="{Binding MinionCard.Type, ElementName=minionCard}"
                                    Value="{x:Static enums:MinionCardType.Actions}">
                                    <Setter Property="Template" Value="{StaticResource ActionsContentTemplate}" />
                                </DataTrigger>
                                <DataTrigger
                                    Binding="{Binding MinionCard.Type, ElementName=minionCard}"
                                    Value="{x:Static enums:MinionCardType.LegendaryActions}">
                                    <Setter Property="Template" Value="{StaticResource LegendaryActionsContentTemplate}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ContentControl.Style>
                </ContentControl>

                <!--  Footer styles  -->
                <ContentControl
                    Canvas.Left="0"
                    Canvas.Top="315"
                    Width="248"
                    Height="33">
                    <ContentControl.Style>
                        <Style TargetType="{x:Type ContentControl}">
                            <Style.Triggers>
                                <DataTrigger
                                    Binding="{Binding MinionCard.Type, ElementName=minionCard}"
                                    Value="{x:Static enums:MinionCardType.Avatar}">
                                    <Setter Property="Template" Value="{StaticResource AvatarFooterTemplate}" />
                                </DataTrigger>
                                <DataTrigger
                                    Binding="{Binding MinionCard.Type, ElementName=minionCard}"
                                    Value="{x:Static enums:MinionCardType.Stats}">
                                    <Setter Property="Template" Value="{StaticResource StatsFooterTemplate}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ContentControl.Style>
                </ContentControl>

                <!--  Level  -->
                <Border
                    Canvas.Top="25"
                    Canvas.Right="0"
                    Width="25"
                    Height="25"
                    Margin="50,0,4,0"
                    Background="{Binding CardDesign.HeaderColor, ElementName=minionCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    BorderBrush="{Binding CardDesign.LineColor, ElementName=minionCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    BorderThickness="2"
                    CornerRadius="20"
                    DockPanel.Dock="Right">
                    <Label
                        Margin="0"
                        Padding="0"
                        Background="Transparent"
                        Content="{Binding Minion.ChalangeRating, ElementName=minionCard}"
                        FontFamily="Arial"
                        FontSize="14"
                        FontWeight="DemiBold"
                        Foreground="{Binding CardDesign.HeaderIconColor, ElementName=minionCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <Border.Style>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="Visibility" Value="Collapsed" />
                            <Style.Triggers>
                                <DataTrigger
                                    Binding="{Binding MinionCard.Type, ElementName=minionCard}"
                                    Value="{x:Static enums:MinionCardType.Avatar}">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                </Border>

            </Canvas>
            <!--  Card border  -->
            <Border
                Width="250"
                Height="350"
                Margin="0"
                Padding="0"
                BorderBrush="{Binding CardDesign.LineColor, ElementName=minionCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                BorderThickness="2"
                CornerRadius="4" />
        </Grid>
    </Viewbox>
</UserControl>
