<UserControl x:Class="CardDesigner.UI.Controls.ItemCardControl" x:Name="itemCard"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:CardDesigner.UI.Controls"
    xmlns:converters="clr-namespace:CardDesigner.UI.Converters"
    xmlns:enums="clr-namespace:CardDesigner.Domain.Enums;assembly=CardDesigner.Domain">
    <UserControl.Resources>
        <!--  Templates  -->
        <ControlTemplate x:Key="ClothingTemplate">
            <Grid Background="Transparent">
                <Label
                    Background="Transparent"
                    Content="{StaticResource Clothing}"
                    Foreground="{Binding CardDesign.HeaderIconColor, ElementName=itemCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Style="{StaticResource IconLabel}" />
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="UsableTemplate">
            <Grid Background="Transparent">
                <Label
                    Background="Transparent"
                    Content="{StaticResource Usable}"
                    Foreground="{Binding CardDesign.HeaderIconColor, ElementName=itemCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Style="{StaticResource IconLabel}" />
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="ConsumableTemplate">
            <Grid Background="Transparent">
                <Label
                    Background="Transparent"
                    Content="{StaticResource Consumable}"
                    Foreground="{Binding CardDesign.HeaderIconColor, ElementName=itemCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Style="{StaticResource IconLabel}" />
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="ArmourTemplate">
            <Grid Background="Transparent">
                <Label
                    Background="Transparent"
                    Content="{Binding ItemCard.Item.ArmourType, ElementName=itemCard, Converter={converters:StringToResourceKeyConverter}}"
                    Style="{StaticResource IconLabel}" />
                <Label
                    Background="Transparent"
                    Content="{Binding ItemCard.Item.EquipmentSlot, ElementName=itemCard, Converter={converters:StringToResourceKeyConverter}}"
                    Foreground="{Binding CardDesign.HeaderIconColor, ElementName=itemCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Style="{StaticResource IconLabel}" />
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="WeaponTemplate">
            <Grid Background="Transparent">
                <Label
                    Background="Transparent"
                    Content="{Binding ItemCard.Item.EquipmentSlot, ElementName=itemCard, Converter={converters:StringToResourceKeyConverter}}"
                    Style="{StaticResource IconLabel}" />
                <Label
                    Background="Transparent"
                    Content="{Binding ItemCard.Item.WeaponType, ElementName=itemCard, Converter={converters:StringToResourceKeyConverter}}"
                    Foreground="{Binding CardDesign.HeaderIconColor, ElementName=itemCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Style="{StaticResource IconLabel}" />
            </Grid>
        </ControlTemplate>

        <ControlTemplate x:Key="WeaponProperties">
            <WrapPanel
                Canvas.Top="315"
                Width="250"
                Height="32.5"
                Margin="0"
                ItemHeight="30"
                ItemWidth="60"
                Orientation="Horizontal">
                <controls:IconWithPropertyControl
                    Height="30"
                    Background="Transparent"
                    Icon="{Binding ItemCard.Item.DiceType, Converter={converters:StringToResourceKeyConverter}, ElementName=itemCard}"
                    IconColorFooter="{Binding CardDesign.FooterIconColor, ElementName=itemCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    TextColor="{Binding CardDesign.FooterTextColor, ElementName=itemCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Value="{Binding ItemCard.Item.DiceValue, ElementName=itemCard}" />
                <Label
                    Margin="0,5,0,0"
                    Padding="0"
                    VerticalAlignment="Center"
                    Background="Transparent"
                    Content="{Binding ItemCard.Item.PhysicalDamageType, ElementName=itemCard}"
                    FontSize="12"
                    Foreground="{Binding CardDesign.FooterTextColor, ElementName=itemCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            </WrapPanel>
        </ControlTemplate>
        <ControlTemplate x:Key="ArmourProperties">
            <WrapPanel
                Canvas.Top="315"
                Width="250"
                Height="32.5"
                Margin="0"
                ItemHeight="30"
                ItemWidth="60"
                Orientation="Horizontal">
                <Label
                    Width="20"
                    Margin="0,5,0,0"
                    Padding="0"
                    VerticalAlignment="Center"
                    Background="Transparent"
                    Content="AC: "
                    FontSize="12"
                    Foreground="{Binding CardDesign.FooterIconColor, ElementName=itemCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <Label
                    Margin="0,5,0,0"
                    Padding="0"
                    VerticalAlignment="Center"
                    Background="Transparent"
                    Content="{Binding ItemCard.Item.ArmourClass, ElementName=itemCard}"
                    FontSize="12"
                    Foreground="{Binding CardDesign.FooterTextColor, ElementName=itemCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            </WrapPanel>
        </ControlTemplate>

        <ControlTemplate x:Key="UsableProperties">
            <WrapPanel
                Canvas.Top="315"
                Width="250"
                Height="32.5"
                Margin="0"
                ItemHeight="30"
                ItemWidth="60"
                Orientation="Horizontal">
                <controls:IconWithPropertyControl
                    Icon="{StaticResource SpellCastingTime}"
                    IconColorFooter="{Binding CardDesign.FooterIconColor, ElementName=itemCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    TextColor="{Binding CardDesign.FooterTextColor, ElementName=itemCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Unit="{Binding ItemCard.Item.UseTimeType, ElementName=itemCard, Converter={converters:EnumToPropertyConverter}, ConverterParameter=Unit}"
                    Value="{Binding ItemCard.Item.UseTimeValue, ElementName=itemCard}" />
                <Label
                    Width="40"
                    Margin="0,5,0,0"
                    Padding="0"
                    VerticalAlignment="Center"
                    Background="Transparent"
                    Content="Uses: "
                    FontSize="12"
                    Foreground="{Binding CardDesign.FooterIconColor, ElementName=itemCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <Label
                    Margin="0,5,0,0"
                    Padding="0"
                    VerticalAlignment="Center"
                    Background="Transparent"
                    Content="{Binding ItemCard.Item.Uses, ElementName=itemCard}"
                    FontSize="12"
                    Foreground="{Binding CardDesign.FooterTextColor, ElementName=itemCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            </WrapPanel>
        </ControlTemplate>

        <ControlTemplate x:Key="ConsumableProperties">
            <WrapPanel
                Canvas.Top="315"
                Width="250"
                Height="32.5"
                Margin="0"
                ItemHeight="30"
                ItemWidth="60"
                Orientation="Horizontal">
                <controls:IconWithPropertyControl
                    Icon="{StaticResource SpellCastingTime}"
                    IconColorFooter="{Binding CardDesign.FooterIconColor, ElementName=itemCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    TextColor="{Binding CardDesign.FooterTextColor, ElementName=itemCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Unit="{Binding ItemCard.Item.UseTimeType, ElementName=itemCard, Converter={converters:EnumToPropertyConverter}, ConverterParameter=Unit}"
                    Value="{Binding ItemCard.Item.UseTimeValue, ElementName=itemCard}" />
                <Label
                    Width="40"
                    Margin="0,5,0,0"
                    Padding="0"
                    VerticalAlignment="Center"
                    Background="Transparent"
                    Content="Doses: "
                    FontSize="12"
                    Foreground="{Binding CardDesign.FooterIconColor, ElementName=itemCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <Label
                    Margin="0,5,0,0"
                    Padding="0"
                    VerticalAlignment="Center"
                    Background="Transparent"
                    Content="{Binding ItemCard.Item.Doses, ElementName=itemCard}"
                    FontSize="12"
                    Foreground="{Binding CardDesign.FooterTextColor, ElementName=itemCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            </WrapPanel>
        </ControlTemplate>

    </UserControl.Resources>
    <Viewbox>
        <Grid>
            <!--  Card border  -->
            <Border
                Width="250"
                Height="80"
                Margin="0"
                Padding="0"
                VerticalAlignment="Top"
                Background="{Binding CardDesign.HeaderColor, ElementName=itemCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                BorderBrush="{StaticResource CardLineColor}"
                BorderThickness="2"
                CornerRadius="4" />
            <Border
                Width="250"
                Height="80"
                Margin="0"
                Padding="0"
                VerticalAlignment="Bottom"
                Background="{Binding CardDesign.FooterColor, ElementName=itemCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                BorderBrush="{StaticResource CardLineColor}"
                BorderThickness="2"
                CornerRadius="4" />
            <!--  Card contents  -->
            <Canvas>
                <!--  Body lines  -->
                <Border
                    Canvas.Top="35"
                    Width="250"
                    Height="280"
                    Margin="0"
                    Padding="0"
                    Background="{Binding CardDesign.BackgroundColor, ElementName=itemCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    BorderBrush="{Binding CardDesign.LineColor, ElementName=itemCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    BorderThickness="0,2,0,2" />

                <!--  Item icon  -->
                <controls:ImageControl
                    Canvas.Top="37"
                    Width="248"
                    Height="118"
                    ImageSource="{Binding ItemCard.IconFilePath, ElementName=itemCard}"
                    ImageStretch="{Binding ItemCard.IconStretch, ElementName=itemCard, Converter={converters:StringToStretchConverter}}" />

                <!--  Components  -->
                <DockPanel
                    Canvas.Left="2"
                    Canvas.Top="25"
                    Width="248"
                    LastChildFill="False">
                    <!--  Slot & Weight  /  WeaponType & Hands  -->
                    <Border
                        Width="25"
                        Height="25"
                        Margin="2,0,10,0"
                        Background="{Binding CardDesign.HeaderColor, ElementName=itemCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        BorderBrush="{Binding CardDesign.LineColor, ElementName=itemCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        BorderThickness="2"
                        CornerRadius="20"
                        DockPanel.Dock="Left">
                        <ContentControl>
                            <ContentControl.Style>
                                <Style TargetType="{x:Type ContentControl}">
                                    <Style.Triggers>
                                        <DataTrigger
                                            Binding="{Binding ItemCard.Item, ElementName=itemCard, Converter={converters:TypeToStringConverter}}"
                                            Value="ArmourModel">
                                            <Setter Property="Template" Value="{StaticResource ArmourTemplate}" />
                                        </DataTrigger>
                                        <DataTrigger
                                            Binding="{Binding ItemCard.Item, ElementName=itemCard, Converter={converters:TypeToStringConverter}}"
                                            Value="WeaponModel">
                                            <Setter Property="Template" Value="{StaticResource WeaponTemplate}" />
                                        </DataTrigger>
                                        <DataTrigger
                                            Binding="{Binding ItemCard.Item, ElementName=itemCard, Converter={converters:TypeToStringConverter}}"
                                            Value="UsableModel">
                                            <Setter Property="Template" Value="{StaticResource UsableTemplate}" />
                                        </DataTrigger>
                                        <DataTrigger
                                            Binding="{Binding ItemCard.Item, ElementName=itemCard, Converter={converters:TypeToStringConverter}}"
                                            Value="ClothingModel">
                                            <Setter Property="Template" Value="{StaticResource ClothingTemplate}" />
                                        </DataTrigger>
                                        <DataTrigger
                                            Binding="{Binding ItemCard.Item, ElementName=itemCard, Converter={converters:TypeToStringConverter}}"
                                            Value="ConsumableModel">
                                            <Setter Property="Template" Value="{StaticResource ConsumableTemplate}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ContentControl.Style>
                        </ContentControl>
                    </Border>
                    <!--<Label
                        Content="{Binding ItemCard.Item, ElementName=itemCard}"
                        FontSize="8" />-->
                    <!--  Attunement  -->
                    <Border
                        Width="25"
                        Height="25"
                        Margin="2,0,0,0"
                        Background="{Binding CardDesign.HeaderColor, ElementName=itemCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        BorderBrush="{Binding CardDesign.LineColor, ElementName=itemCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        BorderThickness="2"
                        CornerRadius="20"
                        Visibility="{Binding ItemCard.RequiresAttunement, ElementName=itemCard, Converter={converters:BoolToVisibilityConverter}}">
                        <Label
                            Content="{StaticResource RequiresAttunement}"
                            Style="{StaticResource IconLabel}" />
                    </Border>
                    <!--  Unidentified  -->
                    <Border
                        Width="25"
                        Height="25"
                        Margin="2,0,0,0"
                        Background="{Binding CardDesign.HeaderColor, ElementName=itemCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        BorderBrush="{Binding CardDesign.LineColor, ElementName=itemCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        BorderThickness="2"
                        CornerRadius="20"
                        Visibility="{Binding ItemCard.IsUnidentified, ElementName=itemCard, Converter={converters:BoolToVisibilityConverter}}">
                        <Label
                            Content="{StaticResource IsUnidentified}"
                            Style="{StaticResource IconLabel}" />
                    </Border>
                    <!--  Magical  -->
                    <Border
                        Width="25"
                        Height="25"
                        Margin="2,0,0,0"
                        Background="{Binding CardDesign.HeaderColor, ElementName=itemCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        BorderBrush="{Binding CardDesign.LineColor, ElementName=itemCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        BorderThickness="2"
                        CornerRadius="20"
                        Visibility="{Binding ItemCard.IsMagical, ElementName=itemCard, Converter={converters:BoolToVisibilityConverter}}">
                        <Label
                            Content="{StaticResource IsMagical}"
                            Style="{StaticResource IconLabel}" />
                    </Border>
                </DockPanel>

                <!--  Description  -->
                <Border
                    Canvas.Top="155"
                    Width="250"
                    Height="158"
                    Margin="0"
                    Padding="0"
                    Background="{Binding CardDesign.BackgroundColor, ElementName=itemCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    BorderBrush="{Binding CardDesign.LineColor, ElementName=itemCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    BorderThickness="0,2,0,0">
                    <!--  Description textbox  -->
                    <controls:TextBoxWithPlaceholderControl
                        Width="246"
                        MaxHeight="160"
                        Background="Transparent"
                        FontSize="{Binding ItemCard.DescriptionFontSize, Mode=TwoWay, ElementName=itemCard}"
                        FontWeight="Normal"
                        Foreground="{Binding CardDesign.DescriptionTextColor, ElementName=itemCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        InputText="{Binding ItemCard.Description, ElementName=itemCard, Mode=TwoWay}"
                        IsEnabled="{Binding IsEditable, ElementName=itemCard}" />
                </Border>

                <!--  Item properties  -->
                <ContentControl
                    Canvas.Top="315"
                    Width="250"
                    Height="32.5"
                    Margin="0">
                    <ContentControl.Style>
                        <Style TargetType="{x:Type ContentControl}">
                            <Style.Triggers>
                                <DataTrigger
                                    Binding="{Binding ItemCard.Item, ElementName=itemCard, Converter={converters:TypeToStringConverter}}"
                                    Value="ArmourModel">
                                    <Setter Property="Template" Value="{StaticResource ArmourProperties}" />
                                </DataTrigger>
                                <DataTrigger
                                    Binding="{Binding ItemCard.Item, ElementName=itemCard, Converter={converters:TypeToStringConverter}}"
                                    Value="WeaponModel">
                                    <Setter Property="Template" Value="{StaticResource WeaponProperties}" />
                                </DataTrigger>
                                <DataTrigger
                                    Binding="{Binding ItemCard.Item, ElementName=itemCard, Converter={converters:TypeToStringConverter}}"
                                    Value="UsableModel">
                                    <Setter Property="Template" Value="{StaticResource UsableProperties}" />
                                </DataTrigger>
                                <DataTrigger
                                    Binding="{Binding ItemCard.Item, ElementName=itemCard, Converter={converters:TypeToStringConverter}}"
                                    Value="ConsumableModel">
                                    <Setter Property="Template" Value="{StaticResource ConsumableProperties}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ContentControl.Style>
                </ContentControl>

                <Border>
                    <!--  Title  -->
                    <controls:TextBoxWithPlaceholderControl
                        Canvas.Left="2"
                        Width="246"
                        Background="Transparent"
                        FontSize="{Binding ItemCard.TitleFontSize, Mode=TwoWay, ElementName=itemCard, UpdateSourceTrigger=PropertyChanged}"
                        FontWeight="Bold"
                        Foreground="{Binding CardDesign.HeaderTextColor, ElementName=itemCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        InputText="{Binding ItemCard.Title, ElementName=itemCard, Mode=TwoWay}"
                        IsEnabled="{Binding IsEditable, ElementName=itemCard}" />
                </Border>

                <!--  Item properties  -->
                <WrapPanel
                    Canvas.Top="200"
                    Width="250"
                    Height="40"
                    Margin="0"
                    ItemHeight="30"
                    ItemWidth="60"
                    Orientation="Horizontal" />

            </Canvas>

            <!--  Card border  -->
            <Border
                Width="250"
                Height="350"
                Margin="0"
                Padding="0"
                BorderBrush="{Binding CardDesign.LineColor, ElementName=itemCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                BorderThickness="2"
                CornerRadius="4" />
        </Grid>
    </Viewbox>
</UserControl>
