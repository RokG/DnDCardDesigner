<UserControl x:Class="CardDesigner.UI.Views.ItemCardView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:CardDesigner.UI.Controls"
    xmlns:converters="clr-namespace:CardDesigner.UI.Converters"
    xmlns:enums="clr-namespace:CardDesigner.Domain.Enums;assembly=CardDesigner.Domain"
    xmlns:local="clr-namespace:CardDesigner.UI.Views"
    xmlns:models="clr-namespace:CardDesigner.Domain.Models;assembly=CardDesigner.Domain"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    BorderBrush="{StaticResource WindowBorder}"
    BorderThickness="3,0,0,0">
    <UserControl.Resources>
        <!--  Templates  -->
        <ControlTemplate x:Key="ArmorTemplate">
            <ListBox
                Height="200"
                ItemsSource="{Binding AllArmours}"
                SelectedIndex="0"
                SelectedItem="{Binding SelectedItemCard.Item}">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Name}" />
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </ControlTemplate>
        <!--  Templates  -->
        <ControlTemplate x:Key="WeaponTemplate">
            <ListBox
                Height="200"
                ItemsSource="{Binding AllWeapons}"
                SelectedIndex="0"
                SelectedItem="{Binding SelectedItemCard.Item}">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Name}" />
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </ControlTemplate>
        <!--  Armour detailed properties  -->
        <ControlTemplate x:Key="ArmourProperties">
            <StackPanel>
                <controls:DataLabel
                    Value1="{Binding SelectedItemCard.Item.ArmourClass}"
                    ValueName="Armour class" />
            </StackPanel>
        </ControlTemplate>
        <!--  Weapon detailed properties  -->
        <ControlTemplate x:Key="WeaponProperties">
            <StackPanel>
                <controls:DataLabel
                    Value1="{Binding SelectedItemCard.Item.DiceValue}"
                    Value2="{Binding SelectedItemCard.Item.DiceType}"
                    Value3="{Binding SelectedItemCard.Item.PhysicalDamageType}"
                    ValueName="Damage" />
                <controls:DataLabel
                    Value1="{Binding SelectedItemCard.Item.DamageModifier, StringFormat='{}+{0}'}"
                    ValueName="Modifier" />
            </StackPanel>
        </ControlTemplate>
    </UserControl.Resources>
    <Grid Margin="4">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <!--  header area  -->
        <Border BorderThickness="0,0,0,1">
            <StackPanel>
                <Label
                    Content="{Binding Name}"
                    ContentStringFormat="{}{0}s"
                    FontSize="32" />
                <Label Content="{Binding Description}" />
            </StackPanel>
        </Border>

        <!--  Content Area  -->
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*" />
                <ColumnDefinition Width="7*" />
            </Grid.ColumnDefinitions>

            <!--  Card Settings  -->
            <StackPanel Orientation="Vertical">

                <!--  Database control  -->
                <controls:AddEditItem
                    Title="Item Card"
                    AddedItemName="{Binding ItemCardName, Mode=TwoWay}"
                    ItemsSource="{Binding AllItemCards, Mode=TwoWay}"
                    SaveCommand="{Binding CreateItemCardCommand}"
                    SelectedItem="{Binding SelectedItemCard, Mode=TwoWay}"
                    ViewOnly="False" />

                <!--  Name and Icon  -->
                <Border
                    BorderThickness="1"
                    Style="{StaticResource VisibleBorder}">
                    <StackPanel>
                        <Label
                            Margin="5,0"
                            Padding="0"
                            Content="Card name:" />
                        <TextBox
                            Margin="5,0"
                            Text="{Binding SelectedItemCard.Name}" />
                        <Label
                            Margin="5,10,0,0"
                            Padding="0"
                            Content="Item image and image fill:" />
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <controls:FilePicker
                                Margin="5"
                                Text="{Binding SelectedItemCard.IconFilePath, Mode=TwoWay}" />
                            <ComboBox
                                Grid.Column="1"
                                SelectedItem="{Binding SelectedItemCard.IconStretch}">
                                <sys:String>None</sys:String>
                                <sys:String>Fill</sys:String>
                                <sys:String>Uniform</sys:String>
                                <sys:String>Uniform To Fill</sys:String>
                            </ComboBox>
                        </Grid>
                    </StackPanel>
                </Border>

                <!--  Item Base Properties  -->
                <Border
                    BorderThickness="1"
                    Style="{StaticResource VisibleBorder}">
                    <DockPanel>
                        <Label
                            Padding="0"
                            Content="Item Type:" />
                        <ListBox
                            Height="200"
                            ItemsSource="{Binding Source={StaticResource ItemTypeEnum}}"
                            SelectedIndex="0"
                            SelectedItem="{Binding SelectedItemCard.Type}" />
                        <ContentControl Margin="5,0">
                            <ContentControl.Style>
                                <Style TargetType="{x:Type ContentControl}">
                                    <Style.Triggers>
                                        <DataTrigger
                                            Binding="{Binding SelectedItemCard.Type}"
                                            Value="{x:Static enums:ItemType.Armour}">
                                            <Setter Property="Template" Value="{StaticResource ArmorTemplate}" />
                                        </DataTrigger>
                                        <DataTrigger
                                            Binding="{Binding SelectedItemCard.Type}"
                                            Value="{x:Static enums:ItemType.Weapon}">
                                            <Setter Property="Template" Value="{StaticResource WeaponTemplate}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ContentControl.Style>
                        </ContentControl>
                    </DockPanel>
                </Border>

                <!--  Item Advanced Properties  -->
                <Border
                    BorderThickness="1"
                    Style="{StaticResource VisibleBorder}">
                    <ContentControl Margin="5,0">
                        <ContentControl.Style>
                            <Style TargetType="{x:Type ContentControl}">
                                <Style.Triggers>
                                    <!--<DataTrigger
                                        Binding="{Binding SelectedItemCard.Item}"
                                        Value="{x:Type models:ArmourModel}">
                                        <Setter Property="Template" Value="{StaticResource ArmourProperties}" />
                                    </DataTrigger>
                                    <DataTrigger
                                        Binding="{Binding SelectedItemCard.Item}"
                                        Value="{x:Type models:WeaponModel}">
                                        <Setter Property="Template" Value="{StaticResource WeaponProperties}" />
                                    </DataTrigger>-->
                                    <DataTrigger
                                        Binding="{Binding SelectedItemCard.Type, Mode=OneWay}"
                                        Value="{x:Static enums:ItemType.Armour}">
                                        <Setter Property="Template" Value="{StaticResource ArmourProperties}" />
                                    </DataTrigger>
                                    <DataTrigger
                                        Binding="{Binding SelectedItemCard.Type, Mode=OneWay}"
                                        Value="{x:Static enums:ItemType.Weapon}">
                                        <Setter Property="Template" Value="{StaticResource WeaponProperties}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ContentControl.Style>
                    </ContentControl>
                </Border>

                <!--  True/False props  -->
                <Border
                    BorderThickness="1"
                    Style="{StaticResource VisibleBorder}">
                    <StackPanel>
                        <CheckBox
                            Content="Magical"
                            IsChecked="{Binding SelectedItemCard.IsMagical}" />
                        <CheckBox
                            Content="Unidentified"
                            IsChecked="{Binding SelectedItemCard.IsUnidentified}" />
                        <CheckBox
                            Content="Attunement"
                            IsChecked="{Binding SelectedItemCard.RequiresAttunement}" />
                    </StackPanel>
                </Border>

                <!--  Manually update button  -->
                <Button
                    Command="{Binding UpdateItemCardCommand}"
                    Content="Update" />

            </StackPanel>

            <!--  Card view  -->
            <controls:ItemCardControl
                Grid.Column="1"
                IsEditable="True"
                ItemCard="{Binding SelectedItemCard, Mode=TwoWay}" />
        </Grid>
    </Grid>
</UserControl>