<UserControl x:Class="CardDesigner.UI.Views.ItemCardView" x:Name="itemCardControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:CardDesigner.UI.Controls"
    xmlns:converters="clr-namespace:CardDesigner.UI.Converters"
    xmlns:enums="clr-namespace:CardDesigner.Domain.Enums;assembly=CardDesigner.Domain"
    xmlns:local="clr-namespace:CardDesigner.UI.Views"
    xmlns:models="clr-namespace:CardDesigner.Domain.Models;assembly=CardDesigner.Domain"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    BorderBrush="{StaticResource WindowBorder}"
    BorderThickness="3,0,0,0">
    <UserControl.Resources>
        <!--
            There is an issue  if there are two templates binding to same property....
            for some fucking reason they wont bind correctly....
            constantly naging about xaml bining issues but everything works reagrdles.
            Assuming this is an issue with update order
        -->

        <!--  Templates  -->
        <ControlTemplate x:Key="ArmourTemplate">
            <DockPanel>
                <controls:TextBoxWithPlaceholderControl x:Name="searchTextBox"
                    Background="{StaticResource TabItemNormalBGND}"
                    BorderBrush="{StaticResource TabItemSelectedFGND}"
                    BorderThickness="1"
                    DockPanel.Dock="Top"
                    InputText="{Binding DataContext.ArmourSearchFilter, ElementName=itemCardControl, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    PlaceholderText="Search.." />
                <DataGrid
                    AutoGenerateColumns="False"
                    ItemsSource="{Binding DataContext.AllArmoursCollectionView, ElementName=itemCardControl, UpdateSourceTrigger=PropertyChanged}"
                    SelectedItem="{Binding DataContext.SelectedItemCard.Item, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ElementName=itemCardControl}">
                    <DataGrid.Columns>
                        <!--<DataGridTemplateColumn>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Button x:Name="assignButton"
                                        Margin="0"
                                        Padding="0"
                                        Content="X"
                                        Visibility="Collapsed" />
                                    <DataTemplate.Triggers>
                                        <DataTrigger
                                            Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource AncestorType=DataGridRow}}"
                                            Value="True">
                                            <Setter TargetName="assignButton" Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>-->
                        <DataGridTextColumn
                            Width="*"
                            Binding="{Binding Name}"
                            Header="Name" />
                        <DataGridTextColumn
                            Width="*"
                            Binding="{Binding ArmourType}"
                            Header="Type" />
                        <DataGridTextColumn
                            Width="*"
                            Binding="{Binding EquipmentSlot}"
                            Header="Slot" />
                        <DataGridTextColumn
                            Width="50"
                            Binding="{Binding ArmourClass}"
                            Header="AC" />
                    </DataGrid.Columns>
                </DataGrid>
            </DockPanel>
        </ControlTemplate>

        <!--  Templates  -->
        <ControlTemplate x:Key="WeaponTemplate">
            <DockPanel>
                <controls:TextBoxWithPlaceholderControl x:Name="searchTextBox"
                    Background="{StaticResource TabItemNormalBGND}"
                    BorderBrush="{StaticResource TabItemSelectedFGND}"
                    BorderThickness="1"
                    DockPanel.Dock="Top"
                    InputText="{Binding DataContext.WeaponSearchFilter, ElementName=itemCardControl, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    PlaceholderText="Search.." />
                <DataGrid
                    AutoGenerateColumns="False"
                    ItemsSource="{Binding DataContext.AllWeaponsCollectionView, ElementName=itemCardControl, UpdateSourceTrigger=PropertyChanged}"
                    SelectedItem="{Binding DataContext.SelectedItemCard.Item, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ElementName=itemCardControl}">
                    <DataGrid.Columns>
                        <DataGridTextColumn
                            Width="*"
                            Binding="{Binding Name}"
                            Header="Name" />
                        <DataGridTextColumn
                            Width="*"
                            Binding="{Binding WeaponType}"
                            Header="Type" />
                        <DataGridTextColumn
                            Width="*"
                            Binding="{Binding EquipmentSlot}"
                            Header="Slot" />
                        <DataGridTemplateColumn
                            Width="*"
                            Header="Damage">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock>
                                            <Run Text="{Binding DiceValue}" />
                                            <Run Text="{Binding DiceType}" />
                                            <Run Text="{Binding PhysicalDamageType}" />
                                        </TextBlock>
                                    </StackPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTextColumn
                            Width="*"
                            Binding="{Binding DamageModifier, StringFormat='{}+{0}'}"
                            Header="Modifier" />
                    </DataGrid.Columns>
                </DataGrid>
            </DockPanel>
        </ControlTemplate>

    </UserControl.Resources>
    <Grid Margin="4">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <!--  header area  -->
        <Border BorderThickness="0,0,0,1">
            <StackPanel>
                <Label
                    Content="{Binding Name}"
                    ContentStringFormat="{}{0}s"
                    FontSize="32" />
                <Label Content="{Binding Description}" />
            </StackPanel>
        </Border>

        <!--  Content Area  -->
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*" />
                <ColumnDefinition Width="7*" />
            </Grid.ColumnDefinitions>

            <!--  Card Settings  -->
            <StackPanel Orientation="Vertical">

                <!--  Database control  -->
                <controls:AddEditItem
                    Title="Item Card"
                    AddedItemName="{Binding ItemCardName, Mode=TwoWay}"
                    ItemsSource="{Binding AllItemCards, Mode=TwoWay}"
                    SaveCommand="{Binding CreateItemCardCommand}"
                    SelectedItem="{Binding SelectedItemCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    ViewOnly="False" />

                <!--  Name and Icon  -->
                <StackPanel Grid.Row="1">
                    <Label
                        Margin="5,0"
                        Padding="0"
                        Content="Card name:" />
                    <TextBox
                        Margin="5,0"
                        Text="{Binding SelectedItemCard.Name}" />
                    <Label
                        Margin="5,10,0,0"
                        Padding="0"
                        Content="Item image and image fill:" />
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <controls:FilePicker
                            Margin="5"
                            Text="{Binding SelectedItemCard.IconFilePath, Mode=TwoWay}" />
                        <ComboBox
                            Grid.Column="1"
                            SelectedItem="{Binding SelectedItemCard.IconStretch}">
                            <sys:String>None</sys:String>
                            <sys:String>Fill</sys:String>
                            <sys:String>Uniform</sys:String>
                            <sys:String>Uniform To Fill</sys:String>
                        </ComboBox>
                    </Grid>
                </StackPanel>

                <!--  Item Base Properties  -->
                <TabControl
                    Grid.Row="2"
                    Height="500"
                    MaxHeight="500"
                    ItemsSource="{Binding Source={StaticResource ItemTypeEnum}}"
                    SelectedItem="{Binding SelectedItemCard.Type, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <TabControl.ContentTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <Label
                                    Background="Transparent"
                                    Content="{Binding DataContext.SelectedItemCard.Item.Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ElementName=itemCardControl}"
                                    ContentStringFormat="{}Currently selected: {0}"
                                    DockPanel.Dock="Top" />
                                <ContentControl>
                                    <ContentControl.Style>
                                        <Style TargetType="{x:Type ContentControl}">
                                            <Style.Triggers>
                                                <DataTrigger
                                                    Binding="{Binding}"
                                                    Value="Armour">
                                                    <Setter Property="Template" Value="{StaticResource ArmourTemplate}" />
                                                </DataTrigger>
                                                <DataTrigger
                                                    Binding="{Binding}"
                                                    Value="Weapon">
                                                    <Setter Property="Template" Value="{StaticResource WeaponTemplate}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ContentControl.Style>
                                </ContentControl>
                            </StackPanel>
                        </DataTemplate>
                    </TabControl.ContentTemplate>
                </TabControl>
                <StackPanel
                    Height="40"
                    Orientation="Horizontal">
                    <Label
                        Height="40"
                        Content="{Binding DataContext.SelectedItemCard.Item.Name, ElementName=itemCardControl}" />
                </StackPanel>

                <!--  True/False props  -->
                <StackPanel Grid.Row="3">
                    <CheckBox
                        Content="Magical"
                        IsChecked="{Binding SelectedItemCard.IsMagical}" />
                    <CheckBox
                        Content="Unidentified"
                        IsChecked="{Binding SelectedItemCard.IsUnidentified}" />
                    <CheckBox
                        Content="Attunement"
                        IsChecked="{Binding SelectedItemCard.RequiresAttunement}" />
                </StackPanel>

                <!--  Manually update button  -->
                <Button
                    Grid.Row="4"
                    Command="{Binding UpdateItemCardCommand}"
                    Content="Update" />

            </StackPanel>

            <!--  Card view  -->
            <controls:ItemCardControl
                Grid.Column="1"
                IsEditable="True"
                ItemCard="{Binding SelectedItemCard, Mode=TwoWay}" />
        </Grid>
    </Grid>
</UserControl>