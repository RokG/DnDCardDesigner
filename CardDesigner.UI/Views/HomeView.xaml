<UserControl x:Class="CardDesigner.UI.Views.HomeView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:CardDesigner.UI.Controls"
    xmlns:converters="clr-namespace:CardDesigner.UI.Converters"
    xmlns:local="clr-namespace:CardDesigner.UI.Views"
    xmlns:models="clr-namespace:CardDesigner.Domain.Models;assembly=CardDesigner.Domain"
    BorderBrush="{StaticResource WindowBorder}"
    BorderThickness="3,0,0,0">
    <UserControl.Resources>

        <!--  Avatar template  -->
        <ControlTemplate x:Key="characterCard">

            <controls:CharacterCardControl
                Grid.Column="1"
                CardDesign="{Binding SelectedCardDesign}"
                CharacterCard="{Binding SelectedCard}" />
        </ControlTemplate>

        <!--  https://www.codemag.com/Article/1401031/Using-the-WPF-TreeView-with-Multiple-Levels  -->
        <DataTemplate x:Key="card">
            <TextBlock>
                <Run
                    FontSize="14"
                    FontWeight="Bold"
                    Text="{Binding Title}" />
                <Run
                    FontSize="12"
                    FontWeight="Normal"
                    Text="{Binding Name, StringFormat='{}({0})'}" />
            </TextBlock>
        </DataTemplate>
        <HierarchicalDataTemplate x:Key="deck"
            ItemTemplate="{StaticResource card}"
            ItemsSource="{Binding Items}">
            <TextBlock>
                <Run
                    FontSize="14"
                    FontWeight="Bold"
                    Text="{Binding Title}" />
                <Run
                    FontSize="12"
                    FontWeight="Normal"
                    Text="{Binding Name, StringFormat='{}({0})'}" />
            </TextBlock>
        </HierarchicalDataTemplate>
        <HierarchicalDataTemplate x:Key="character"
            ItemTemplate="{StaticResource deck}"
            ItemsSource="{Binding Items}">
            <TextBlock>
                <Run
                    FontSize="14"
                    FontWeight="Bold"
                    Text="{Binding Title}" />
                <Run
                    FontSize="12"
                    FontWeight="Normal"
                    Text="{Binding Name, StringFormat='{}({0})'}" />
            </TextBlock>
        </HierarchicalDataTemplate>
    </UserControl.Resources>
    <Grid Margin="4">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <!--  header area  -->
        <Border BorderThickness="0,0,0,3">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <StackPanel Orientation="Horizontal">
                    <Label
                        VerticalAlignment="Bottom"
                        Content="{Binding Name}"
                        FontSize="32" />
                    <Label
                        Margin="0,10"
                        VerticalAlignment="Bottom"
                        Content="{Binding Description}" />
                </StackPanel>
            </Grid>
        </Border>

        <!--  Content Area  -->
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <TreeView
                Grid.Column="0"
                ItemTemplate="{StaticResource character}"
                ItemsSource="{Binding TreeCharacters}"
                SelectedItemChanged="TreeView_SelectedItemChanged">
                <TreeView.Resources>
                    <!--  Because background style is not working?  -->
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#44000000" />
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
                    <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="#44000000" />
                    <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" Color="Black" />
                </TreeView.Resources>
                <TreeView.ItemContainerStyle>
                    <Style TargetType="{x:Type TreeViewItem}">
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                        <Style.Triggers>
                            <Trigger Property="IsExpanded" Value="True">
                                <Setter Property="Background" Value="#11000000" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <!--  THe only thing thats not working  is background?  -->
                                <!--<Setter Property="Background" Value="Green" />-->
                                <Setter Property="FontStyle" Value="Italic" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TreeView.ItemContainerStyle>
            </TreeView>

            <ContentControl Grid.Column="1">
                <ContentControl.Style>
                    <Style TargetType="{x:Type ContentControl}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Label Content="Select any card.." />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <DataTrigger
                                Binding="{Binding SelectedCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={converters:DataTypeConverter}}"
                                Value="{x:Type models:SpellCardModel}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <controls:SpellCardControl
                                                Grid.Column="1"
                                                CardDesign="{Binding SelectedCardDesign}"
                                                SpellCard="{Binding SelectedCard}" />
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                            <DataTrigger
                                Binding="{Binding SelectedCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={converters:DataTypeConverter}}"
                                Value="{x:Type models:ItemCardModel}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <controls:ItemCardControl
                                                Grid.Column="1"
                                                CardDesign="{Binding SelectedCardDesign}"
                                                ItemCard="{Binding SelectedCard}" />
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                            <DataTrigger
                                Binding="{Binding SelectedCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={converters:DataTypeConverter}}"
                                Value="{x:Type models:CharacterCardModel}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <controls:CharacterCardControl
                                                Grid.Column="1"
                                                CardDesign="{Binding SelectedCardDesign}"
                                                CharacterCard="{Binding SelectedCard}" />
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ContentControl.Style>
            </ContentControl>

        </Grid>
    </Grid>
</UserControl>
