<UserControl x:Class="CardDesigner.UI.Views.DeckDesignView" x:Name="characterControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:CardDesigner.UI.Controls"
    xmlns:local="clr-namespace:CardDesigner.UI.Views"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    BorderBrush="{StaticResource WindowBorder}"
    BorderThickness="3,0,0,0">
    <Grid Margin="4">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <!--  header area  -->
        <Border BorderThickness="0,0,0,1">
            <StackPanel>
                <Label
                    Content="{Binding Name}"
                    ContentStringFormat="{}{0}s"
                    FontSize="32" />
                <Label Content="{Binding Description}" />
            </StackPanel>
        </Border>

        <!--  body area  -->
        <Border Grid.Row="1">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*" />
                    <ColumnDefinition Width="8*" />
                </Grid.ColumnDefinitions>

                <StackPanel>

                    <!--  Characters  -->
                    <controls:AddEditItem
                        Title="Characters"
                        ItemsSource="{Binding AllCharacters, Mode=TwoWay}"
                        SelectedItem="{Binding SelectedCharacter, Mode=TwoWay}"
                        ViewOnly="True" />

                    <!--  Characters  -->
                    <controls:AddEditItem
                        Title="Character background"
                        ItemsSource="{Binding AllCharacterDeckDesigns, Mode=TwoWay}"
                        SelectedItem="{Binding SelectedCharacterBackgroundDesign, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        ViewOnly="True" />

                    <!--  Manage spell decks on character  -->
                    <Border BorderThickness="1">
                        <Border.Style>
                            <Style BasedOn="{StaticResource VisibleBorder}" TargetType="{x:Type Border}">
                                <Setter Property="Visibility" Value="Visible" />
                                <Style.Triggers>
                                    <DataTrigger
                                        Binding="{Binding SelectedCharacter}"
                                        Value="{x:Null}">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <StackPanel>
                            <Label Content="Spell decks" />
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="10" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <DataGrid
                                    Grid.Column="0"
                                    AutoGenerateColumns="False"
                                    ItemsSource="{Binding AllSpellDecks, Mode=TwoWay}">
                                    <DataGrid.Columns>
                                        <DataGridTemplateColumn
                                            Width="*"
                                            Header="Available decks">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <Button
                                                        Command="{Binding DataContext.AddSpellDeckToCharacterCommand, ElementName=characterControl}"
                                                        CommandParameter="{Binding}"
                                                        Content="{Binding Name}"
                                                        Style="{StaticResource CardAssignUnassignButton}" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                    </DataGrid.Columns>
                                </DataGrid>
                                <DataGrid
                                    Grid.Column="2"
                                    AutoGenerateColumns="False"
                                    ItemsSource="{Binding CharacterSpellDecks, Mode=TwoWay}">
                                    <DataGrid.Columns>
                                        <DataGridTemplateColumn
                                            Width="*"
                                            Header="Decks on character">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <Button
                                                        Command="{Binding DataContext.RemoveSpellDeckFromCharacterCommand, ElementName=characterControl}"
                                                        CommandParameter="{Binding}"
                                                        Content="{Binding Name}"
                                                        Style="{StaticResource CardAssignUnassignButton}" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                    </DataGrid.Columns>
                                </DataGrid>
                            </Grid>
                        </StackPanel>
                    </Border>

                    <!--  Manage spell decks on character  -->
                    <Border BorderThickness="1">
                        <Border.Style>
                            <Style BasedOn="{StaticResource VisibleBorder}" TargetType="{x:Type Border}">
                                <Setter Property="Visibility" Value="Visible" />
                                <Style.Triggers>
                                    <DataTrigger
                                        Binding="{Binding SelectedCharacter}"
                                        Value="{x:Null}">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <StackPanel>
                            <Label Content="Item decks" />
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="10" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <DataGrid
                                    Grid.Column="0"
                                    AutoGenerateColumns="False"
                                    ItemsSource="{Binding AllItemDecks, Mode=TwoWay}">
                                    <DataGrid.Columns>
                                        <DataGridTemplateColumn
                                            Width="*"
                                            Header="Available decks">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <Button
                                                        Command="{Binding DataContext.AddItemDeckToCharacterCommand, ElementName=characterControl}"
                                                        CommandParameter="{Binding}"
                                                        Content="{Binding Name}"
                                                        Style="{StaticResource CardAssignUnassignButton}" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                    </DataGrid.Columns>
                                </DataGrid>
                                <DataGrid
                                    Grid.Column="2"
                                    AutoGenerateColumns="False"
                                    ItemsSource="{Binding CharacterItemDecks, Mode=TwoWay}">
                                    <DataGrid.Columns>
                                        <DataGridTemplateColumn
                                            Width="*"
                                            Header="Decks on character">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <Button
                                                        Command="{Binding DataContext.RemoveItemDeckFromCharacterCommand, ElementName=characterControl}"
                                                        CommandParameter="{Binding}"
                                                        Content="{Binding Name}"
                                                        Style="{StaticResource CardAssignUnassignButton}" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                    </DataGrid.Columns>
                                </DataGrid>
                            </Grid>
                        </StackPanel>
                    </Border>
                </StackPanel>

                <!--  Card overview  -->
                <TabControl Grid.Column="1">
                    <TabItem Header="Deck Background">
                        <StackPanel>
                            <!--  Selectors  -->
                            <DockPanel>
                                <Button
                                    Height="40"
                                    Padding="5"
                                    HorizontalAlignment="Left"
                                    Command="{Binding UpdateCharactereckDesignCommand}"
                                    Content="Assign to Character" />
                                <Label
                                    Background="Transparent"
                                    Content="{Binding SelectedCharacter.Name}" />
                                <Label
                                    Background="Transparent"
                                    Content="Design:" />
                                <controls:AddEditItem
                                    Margin="0"
                                    Padding="0"
                                    VerticalAlignment="Center"
                                    AddedItemName="{Binding AddedCharacterDeckDesignName, Mode=TwoWay}"
                                    BorderThickness="0"
                                    DeleteCommand="{Binding DeleteCharacterDeckDesignCommand}"
                                    ItemsSource="{Binding AllCharacterDeckDesigns, Mode=TwoWay}"
                                    Orientation="Horizontal"
                                    SaveCommand="{Binding CreateCharacterDeckDesignCommand}"
                                    SelectedItem="{Binding SelectedBackgroundDesign, Mode=TwoWay}"
                                    SelectionChanged="SelectedCardDesign_SelectionChanged"
                                    ViewOnly="False" />
                            </DockPanel>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <StackPanel Orientation="Vertical">

                                    <WrapPanel
                                        VerticalAlignment="Top"
                                        ItemWidth="200"
                                        Orientation="Horizontal">
                                        <controls:ColorPickerControl x:Name="BackLineColor"
                                            Title="Line Color"
                                            CurrentColor="{Binding SelectedBackgroundDesign.BackLineColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                        <controls:ColorPickerControl x:Name="BackBackgroundColor"
                                            Title="Background Color"
                                            CurrentColor="{Binding SelectedBackgroundDesign.BackBackgroundColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    </WrapPanel>
                                    <Border Style="{StaticResource VisibleBorder}">
                                        <StackPanel>
                                            <DockPanel>
                                                <Label
                                                    Content="Border width:"
                                                    DockPanel.Dock="Left" />
                                                <Slider
                                                    HorizontalAlignment="Stretch"
                                                    VerticalAlignment="Center"
                                                    HorizontalContentAlignment="Stretch"
                                                    DockPanel.Dock="Right"
                                                    Maximum="20"
                                                    Minimum="0"
                                                    Value="{Binding SelectedBackgroundDesign.BackLineThickness, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            </DockPanel>
                                            <DockPanel>
                                                <Label Content="Icon filepath:" />
                                                <controls:FilePicker Text="{Binding SelectedBackgroundDesign.BackgroundIconFilePath, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            </DockPanel>
                                            <StackPanel Orientation="Horizontal">
                                                <Label Content="Icon stretch:" />
                                                <ComboBox SelectedItem="{Binding SelectedBackgroundDesign.BackgroundIconStretch, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                                    <sys:String>None</sys:String>
                                                    <sys:String>Fill</sys:String>
                                                    <sys:String>Uniform</sys:String>
                                                    <sys:String>Uniform To Fill</sys:String>
                                                </ComboBox>
                                            </StackPanel>
                                        </StackPanel>
                                    </Border>
                                </StackPanel>
                                <controls:CardBackgroundControl
                                    Grid.Column="1"
                                    Height="820"
                                    CardDesign="{Binding SelectedBackgroundDesign, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            </Grid>
                        </StackPanel>
                    </TabItem>
                    <TabItem Header="Spell Card Foreground">
                        <StackPanel>
                            <!--  Selectors  -->
                            <DockPanel>
                                <Button
                                    Height="40"
                                    Padding="5"
                                    HorizontalAlignment="Left"
                                    Command="{Binding UpdateSpellDeckDesignCommand}"
                                    Content="Assign to Spell Deck" />
                                <Label
                                    Background="Transparent"
                                    Content="Deck:" />
                                <controls:AddEditItem
                                    Margin="0"
                                    Padding="0"
                                    VerticalAlignment="Center"
                                    BorderThickness="0"
                                    ItemsSource="{Binding CharacterSpellDecks, Mode=TwoWay}"
                                    SelectedItem="{Binding SelectedSpellDeck, Mode=TwoWay}"
                                    ViewOnly="True" />
                                <Label
                                    Background="Transparent"
                                    Content="Card:" />
                                <controls:AddEditItem
                                    Margin="0"
                                    Padding="0"
                                    VerticalAlignment="Center"
                                    BorderThickness="0"
                                    ItemsSource="{Binding SelectedSpellDeck.SpellCards, Mode=TwoWay}"
                                    SelectedItem="{Binding TestSpellCard, Mode=TwoWay}"
                                    ViewOnly="True" />
                                <Label
                                    Background="Transparent"
                                    Content="Design:" />
                                <controls:AddEditItem
                                    Margin="0"
                                    Padding="0"
                                    VerticalAlignment="Center"
                                    AddedItemName="{Binding AddedSpellDeckDesignName, Mode=TwoWay}"
                                    BorderThickness="0"
                                    DeleteCommand="{Binding DeleteSpellDeckDesignCommand}"
                                    ItemsSource="{Binding AllSpellDeckDesigns, Mode=TwoWay}"
                                    Orientation="Horizontal"
                                    SaveCommand="{Binding CreateSpellDeckDesignCommand}"
                                    SelectedItem="{Binding SelectedSpellDeckDesign, Mode=TwoWay}"
                                    SelectionChanged="SelectedCardDesign_SelectionChanged"
                                    ViewOnly="False" />
                            </DockPanel>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <!--  Color pickers  -->
                                <WrapPanel
                                    VerticalAlignment="Top"
                                    ItemWidth="200"
                                    Orientation="Horizontal">
                                    <controls:ColorPickerControl x:Name="FrontSpellHeaderColor"
                                        Title="Header Background"
                                        CurrentColor="{Binding SelectedSpellDeckDesign.HeaderColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <controls:ColorPickerControl x:Name="FrontSpellHeaderTextColor"
                                        Title="Header Text"
                                        CurrentColor="{Binding SelectedSpellDeckDesign.HeaderTextColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <controls:ColorPickerControl x:Name="FrontSpellHeaderIconColor"
                                        Title="Header Level"
                                        CurrentColor="{Binding SelectedSpellDeckDesign.HeaderIconColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                                    <controls:ColorPickerControl x:Name="FrontSpellBackgroundColor"
                                        Title="Background Color"
                                        CurrentColor="{Binding SelectedSpellDeckDesign.BackgroundColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <controls:ColorPickerControl x:Name="FrontSpellDescriptionTextColor"
                                        Title="Description Color"
                                        CurrentColor="{Binding SelectedSpellDeckDesign.DescriptionTextColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <controls:ColorPickerControl x:Name="FrontSpellLineColor"
                                        Title="Border Color"
                                        CurrentColor="{Binding SelectedSpellDeckDesign.LineColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                                    <controls:ColorPickerControl x:Name="FrontSpellFooterColor"
                                        Title="Footer Background"
                                        CurrentColor="{Binding SelectedSpellDeckDesign.FooterColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <controls:ColorPickerControl x:Name="FrontSpellFooterTextColor"
                                        Title="Footer Text Color"
                                        CurrentColor="{Binding SelectedSpellDeckDesign.FooterTextColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <controls:ColorPickerControl x:Name="FrontSpellFooterIconColor"
                                        Title="Footer Icon Color"
                                        CurrentColor="{Binding SelectedSpellDeckDesign.FooterIconColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                </WrapPanel>
                                <!--  Card  -->
                                <controls:SpellCardControl
                                    Grid.Column="1"
                                    Height="820"
                                    CardDesign="{Binding SelectedSpellDeckDesign, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    SpellCard="{Binding TestSpellCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            </Grid>
                        </StackPanel>
                    </TabItem>
                    <TabItem Header="Item Card Foregound">
                        <StackPanel>
                            <DockPanel>
                                <Button
                                    Height="40"
                                    Padding="5"
                                    HorizontalAlignment="Left"
                                    Command="{Binding UpdateItemDeckDesignCommand}"
                                    Content="Assign to Item Deck" />
                                <Label
                                    Background="Transparent"
                                    Content="Deck:" />
                                <controls:AddEditItem
                                    Margin="0"
                                    Padding="0"
                                    VerticalAlignment="Center"
                                    BorderThickness="0"
                                    ItemsSource="{Binding CharacterItemDecks, Mode=TwoWay}"
                                    SelectedItem="{Binding SelectedItemDeck, Mode=TwoWay}"
                                    ViewOnly="True" />
                                <Label
                                    Background="Transparent"
                                    Content="Card:" />
                                <controls:AddEditItem
                                    Margin="0"
                                    Padding="0"
                                    VerticalAlignment="Center"
                                    BorderThickness="0"
                                    ItemsSource="{Binding SelectedItemDeck.ItemCards, Mode=TwoWay}"
                                    SelectedItem="{Binding TestItemCard, Mode=TwoWay}"
                                    ViewOnly="True" />
                                <Label
                                    Background="Transparent"
                                    Content="Design:" />
                                <controls:AddEditItem
                                    Margin="0"
                                    Padding="0"
                                    VerticalAlignment="Center"
                                    AddedItemName="{Binding AddedItemDeckDesignName, Mode=TwoWay}"
                                    BorderThickness="0"
                                    DeleteCommand="{Binding DeleteItemDeckDesignCommand}"
                                    ItemsSource="{Binding AllItemDeckDesigns, Mode=TwoWay}"
                                    Orientation="Horizontal"
                                    SaveCommand="{Binding CreateItemDeckDesignCommand}"
                                    SelectedItem="{Binding SelectedItemDeckDesign, Mode=TwoWay}"
                                    SelectionChanged="SelectedCardDesign_SelectionChanged"
                                    ViewOnly="False" />
                            </DockPanel>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <!--  Color pickers  -->
                                <WrapPanel
                                    VerticalAlignment="Top"
                                    ItemWidth="200"
                                    Orientation="Horizontal">
                                    <controls:ColorPickerControl x:Name="FrontItemHeaderColor"
                                        Title="Header Background"
                                        CurrentColor="{Binding SelectedItemDeckDesign.HeaderColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <controls:ColorPickerControl x:Name="FrontItemHeaderTextColor"
                                        Title="Header Text Color"
                                        CurrentColor="{Binding SelectedItemDeckDesign.HeaderTextColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <controls:ColorPickerControl x:Name="FrontItemHeaderIconColor"
                                        Title="Header Icon Color"
                                        CurrentColor="{Binding SelectedItemDeckDesign.HeaderIconColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                                    <controls:ColorPickerControl x:Name="FrontItemBackgroundColor"
                                        Title="Background Color"
                                        CurrentColor="{Binding SelectedItemDeckDesign.BackgroundColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <controls:ColorPickerControl x:Name="FrontItemDescriptionTextColor"
                                        Title="Description Color"
                                        CurrentColor="{Binding SelectedItemDeckDesign.DescriptionTextColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <controls:ColorPickerControl x:Name="FrontItemLineColor"
                                        Title="Border Color"
                                        CurrentColor="{Binding SelectedItemDeckDesign.LineColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                                    <controls:ColorPickerControl x:Name="FrontItemFooterColor"
                                        Title="Footer Background"
                                        CurrentColor="{Binding SelectedItemDeckDesign.FooterColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <controls:ColorPickerControl x:Name="FrontItemFooterTextColor"
                                        Title="Footer Text Color"
                                        CurrentColor="{Binding SelectedItemDeckDesign.FooterTextColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <controls:ColorPickerControl x:Name="FrontItemFooterIconColor"
                                        Title="Footer Icon Color"
                                        CurrentColor="{Binding SelectedItemDeckDesign.FooterIconColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                </WrapPanel>
                                <!--  Card  -->
                                <controls:ItemCardControl
                                    Grid.Column="1"
                                    Height="820"
                                    CardDesign="{Binding SelectedItemDeckDesign, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    ItemCard="{Binding TestItemCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            </Grid>
                        </StackPanel>
                    </TabItem>
                </TabControl>

            </Grid>
        </Border>
    </Grid>
</UserControl>
